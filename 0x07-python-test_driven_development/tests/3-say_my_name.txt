The ``3-say_my_name`` module
============================

Using ``say_my_name``
---------------------

check for module docstring:
    >>> m = __import__("3-say_my_name").__doc__
    >>> len(m) > 1
    True

Import function from module:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

check for function docstring:
    >>> f =  __import__("3-say_my_name").say_my_name.__doc__
    >>> len(f) > 1
    True

tests:
Passing first_name and last_name correctly:
    >>> say_my_name("Mercy", "Mukiri")
    My name is Mercy Mukiri

Passing 1 argument:
    >>> say_my_name("Mukiri")
    My name is Mukiri 

Passing None as the last_name:
    >>> say_my_name("Mercy", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Passing None as the first_name:
    >>> say_my_name(None, "Mukiri")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Passing an integer as the first_name:
    >>> say_my_name(1, "Mukiri")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Passing an integer as the last_name:
    >>> say_my_name("Mercy", 1)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Passing no arguments:
    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Passing more than 2 arguments:
    >>> say_my_name("Mercy", "Wanjiku", "Mukiri")
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
    