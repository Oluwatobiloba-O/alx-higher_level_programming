The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Check module docstring:
    >>> m = __import__("2-matrix_divided").__doc__
    >>> len(m) > 1
    True

Import function from module:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Check function docstring:
    >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> len(f) > 1
    True

tests:
Dividing a matrix by an integer:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing a matrix by 0:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Dividing a matrix by a float number:
    >>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
    [[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]

Passing an empty matrix:
    >>> matrix_divided([], 10)
    []

Passing a tuple as an argument:
    >>> matrix_divided((3, 6, 9), 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix whose rows are not of the same size:
    >>> matrix_divided([[22, 34], [2.78, 7.1, -10, 2], [-8]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Dividing a matrix whose elements are not integer/float numbers:
    >>> matrix_divided([["Hello", "World"], ["Hello", "School"]], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([["1"], ["2", "3"], ["5", "6", "7"]], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[2, 4], ['6', 8.4], [10.1, '12'], [5, '10.2', 15.8]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing div as a list
    >>> matrix_divided([[5.7, 8.1], [7.7, 4.9]], [2])
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Passing div as a string
    >>> matrix_divided([[10, 50], [30, 20]], "10")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

No arguments passed:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
    