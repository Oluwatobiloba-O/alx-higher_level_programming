The ``4-print_square`` module
============================

Using ``print_square``
---------------------

Check for module docstring:
    >>> m = __import__("4-print_square").__doc__
    >>> len(m) > 1
    True

Import function from module:
    >>> print_square = __import__('4-print_square').print_square

Check for function docstring:
    >>> f = __import__("4-print_square").print_square.__doc__
    >>> len(f) > 1
    True

tests:
Passing a positive number as the size of the square:
    >>> print_square(4)
    ####
    ####
    ####
    ####

Passing 0 as the size of the square:
    >>> print_square(0)
    <BLANKLINE>

Passing a float number as the size of the square:
    >>> print_square(1.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Passing a string as the size of the square:
    >>> print_square("5")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Passing a negative number as the size of the square:
    >>> print_square(-3)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Passing None as the size of the square:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Passing no arguments to the function:
   >>> print_square()
   Traceback (most recent call last):
   ...
   TypeError: print_square() missing 1 required positional argument: 'size'

Passing more than 1 argument to the function:
    >>> print_square(2, 7)
    Traceback (most recent call last):
    ...
    TypeError: print_square() takes 1 positional argument but 2 were given